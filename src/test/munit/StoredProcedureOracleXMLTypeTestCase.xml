<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
	  xmlns:db="http://www.mulesoft.org/schema/mule/db"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	  xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
		http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">

	<munit:config name="StoredProcedureOracleXMLTypeTestCase.xml" minMuleVersion="4.1.1" />

	<munit:before-test name="createATableWithXMLType">
		<try>
			<db:execute-script config-ref="oracleDbConfigWithoutPoolingProfile">
				<db:sql><![CDATA[DROP TABLE ALIEN]]></db:sql>
			</db:execute-script>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="false">
				</on-error-continue>
			</error-handler>
		</try>
		<db:execute-ddl config-ref="oracleDbConfigWithoutPoolingProfile">
			<db:sql><![CDATA[CREATE TABLE ALIEN(NAME varchar2(255), DESCRIPTION XMLTYPE)]]></db:sql>
		</db:execute-ddl>
		<db:execute-ddl config-ref="oracleDbConfigWithoutPoolingProfile">
			<db:sql><![CDATA[CREATE OR REPLACE PROCEDURE insertAlienDescription(pName IN VARCHAR2, pDescription IN XMLType) IS
							BEGIN
								INSERT INTO Alien VALUES (pName, pDescription);
							END;]]>
			</db:sql>
		</db:execute-ddl>
		<db:execute-ddl config-ref="oracleDbConfigWithoutPoolingProfile">
			<db:sql><![CDATA[CREATE OR REPLACE PROCEDURE getAlienDescription(pName IN VARCHAR2, pDescription OUT XMLType) IS
							BEGIN
								SELECT DESCRIPTION INTO pDescription FROM Alien WHERE NAME = pName;
							END;]]>
			</db:sql>
		</db:execute-ddl>
	</munit:before-test>

	<munit:test name="whenXMLTypeDataIN_ThenNoExceptionIsThrown" ignore="#[java!org::mule::extension::db::DbMunitUtils::isTestIgnored('oracle')]">
		<munit:execution>
			<try>
				<db:stored-procedure config-ref="oracleDbConfigWithoutPoolingProfile">
					<db:sql><![CDATA[{ CALL insertAlienDescription(:name, :data) }]]></db:sql>
					<db:input-parameters><![CDATA[#[{
													 "name" : "Julian",
													 "data": payload
										  }]]]>
					</db:input-parameters>
				</db:stored-procedure>
				<set-payload value="SUCCESS"/>
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true">
						<set-payload value="#[error.description]"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>

		<munit:validation >
			<munit-tools:assert-equals actual="#[payload]" expected='#["SUCCESS"]' message="WENT WRONG, SORRY BRO"/>
		</munit:validation>
	</munit:test>

	<munit:after-test name="dropTableTableWithXMLType">
		<try>
			<db:execute-script config-ref="oracleDbConfigWithoutPoolingProfile">
				<db:sql><![CDATA[DROP TABLE ALIEN]]></db:sql>
			</db:execute-script>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="false">
				</on-error-continue>
			</error-handler>
		</try>
	</munit:after-test>

</mule>
