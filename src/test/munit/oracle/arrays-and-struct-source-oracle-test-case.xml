<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
        http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
		http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">

    <munit:config name="arrays-and-struct-source-oracle-test-case.xml">
        <munit:parameterizations>
            <munit:parameterization name="oracleDbPoolingListenerConfig">
                <munit:parameters>
                    <munit:parameter propertyName="config" value="oracleDbPoolingListenerConfig"/>
                </munit:parameters>
            </munit:parameterization>
        </munit:parameterizations>
    </munit:config>

    <munit:before-suite name="createATableForListenerTest">
        <try>
            <db:execute-script config-ref="${config}">
                <db:sql><![CDATA[DROP TABLE  TEST_LISTENER]]></db:sql>
            </db:execute-script>
            <error-handler>
                <on-error-continue enableNotifications="true" logException="false">
                </on-error-continue>
            </error-handler>
        </try>
        <try>
            <db:execute-script config-ref="${config}">
                <db:sql><![CDATA[DROP TABLE  TEST_LISTENER_EXTERNAL_CONNECTION]]></db:sql>
            </db:execute-script>
            <error-handler>
                <on-error-continue enableNotifications="true" logException="false">
                </on-error-continue>
            </error-handler>
        </try>
        <db:execute-ddl config-ref="${config}">
            <db:sql><![CDATA[CREATE TABLE TEST_LISTENER (id number)]]></db:sql>
        </db:execute-ddl>

        <db:execute-ddl config-ref="${config}">
            <db:sql><![CDATA[CREATE TABLE TEST_LISTENER_EXTERNAL_CONNECTION (id number)]]></db:sql>
        </db:execute-ddl>

        <db:execute-ddl config-ref="${config}">
            <db:sql>create or replace type TEST_STRUCT as object (field1 varchar2(3), field2 number(2), field3 varchar2(60))</db:sql>
        </db:execute-ddl>
        <db:execute-ddl config-ref="${config}">
            <db:sql>create or replace type TEST_STRUCT_COLLECTION as table of TEST_STRUCT</db:sql>
        </db:execute-ddl>
        <db:execute-ddl config-ref="${config}">
        <db:sql><![CDATA[
create or replace procedure retain_first_struct (z in out TEST_STRUCT_COLLECTION)
    IS
begin
    if z is not null and z.count > 1 then
        z := TEST_STRUCT_COLLECTION(z(1));
    end if;
end;
]]></db:sql>
        </db:execute-ddl>
    </munit:before-suite>

    <munit:test name="prepareArrayAndStructLocalTransactionSource" ignore="#[java!org::mule::extension::db::DbMunitUtils::isTestIgnored('oracle')]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="dbListenerFlow"/>
        </munit:enable-flow-sources>

        <munit:execution>
            <db:insert config-ref="${config}">
                <db:sql><![CDATA[INSERT INTO TEST_LISTENER(ID) VALUES(1)]]></db:sql>
            </db:insert>

            <munit-tools:dequeue queueName="sourceLocalTransactionTestQueue" timeout="100" timeoutUnit="SECONDS"/>

        </munit:execution>

        <munit:validation>
            <munit-tools:assert-equals actual="#[payload.list[0][1]]" expected="#[1]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="prepareArrayAndStructLocalTransactionSourceWithExternalConnection" ignore="#[java!org::mule::extension::db::DbMunitUtils::isTestIgnored('oracle')]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="dbListenerFlowExternalConnection"/>
        </munit:enable-flow-sources>

        <munit:execution>
            <db:insert config-ref="${config}">
                <db:sql><![CDATA[INSERT INTO TEST_LISTENER(ID) VALUES(1)]]></db:sql>
            </db:insert>

            <munit-tools:dequeue queueName="sourceLocalTransactionTestQueueExternalConnection" timeout="100" timeoutUnit="SECONDS"/>

        </munit:execution>

        <munit:validation>
            <munit-tools:assert-equals actual="#[payload.list[0][1]]" expected="#[1]"/>
        </munit:validation>
    </munit:test>

    <munit:after-suite name="dropStuff">
        <try>
            <db:execute-script config-ref="${config}">
                <db:sql>
                    drop procedure retain_first_struct;
                    drop type TEST_STRUCT_COLLECTION;
                    drop type TEST_STRUCT;
                </db:sql>
            </db:execute-script>
            <error-handler>
                <on-error-continue logException="false"/>
            </error-handler>
        </try>
    </munit:after-suite>

    <flow name="dbListenerFlow">
        <db:listener config-ref="${config}" table="TEST_LISTENER" transactionalAction="ALWAYS_BEGIN">
            <scheduling-strategy>
                <fixed-frequency  frequency="10"/>
            </scheduling-strategy>
        </db:listener>

        <set-variable
                value="#[Db::prepareArray('TEST_STRUCT_COLLECTION', [ Db::prepareStruct('TEST_STRUCT', ['hi', 1, 'bye']), Db::prepareStruct('TEST_STRUCT', ['hi2', 2, 'bye2']) ])]"
                variableName="list"/>

        <db:stored-procedure config-ref="${config}" inOutParameters='#[{ "list": vars.list }]'>
            <db:sql>call retain_first_struct(:list)</db:sql>
        </db:stored-procedure>

        <set-payload value="#[payload]"/>
        <logger level="INFO"  message="#[payload]"/>

        <munit-tools:queue queueName="sourceLocalTransactionTestQueue"/>
    </flow>

    <flow name="dbListenerFlowExternalConnection">
        <db:listener config-ref="${config}" table="TEST_LISTENER" transactionalAction="ALWAYS_BEGIN">
            <scheduling-strategy>
                <fixed-frequency  frequency="10"/>
            </scheduling-strategy>
        </db:listener>

        <db:insert config-ref="oracleDbPoolingListenerExternalConfig">
            <db:sql><![CDATA[INSERT INTO TEST_LISTENER_EXTERNAL_CONNECTION VALUES(1)]]></db:sql>
        </db:insert>

        <set-variable
                value="#[Db::prepareArray('TEST_STRUCT_COLLECTION', [ Db::prepareStruct('TEST_STRUCT', ['hi', 1, 'bye']), Db::prepareStruct('TEST_STRUCT', ['hi2', 2, 'bye2']) ])]"
                variableName="list"/>

        <db:stored-procedure config-ref="oracleDbPoolingListenerExternalConfig" inOutParameters='#[{ "list": vars.list }]'>
            <db:sql>call retain_first_struct(:list)</db:sql>
        </db:stored-procedure>

        <db:stored-procedure config-ref="${config}" inOutParameters='#[{ "list": vars.list }]'>
            <db:sql>call retain_first_struct(:list)</db:sql>
        </db:stored-procedure>

        <set-payload value="#[payload]"/>
        <logger level="INFO"  message="#[payload]"/>

        <munit-tools:queue queueName="sourceLocalTransactionTestQueueExternalConnection"/>
    </flow>
</mule>
